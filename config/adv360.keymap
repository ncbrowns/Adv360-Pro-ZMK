#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hmprm: hmprm {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Pinky Ring Middy";
            #binding-cells = <2>;
            tapping-term-ms = <270>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <250>;
        };

        hri: hri {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Index";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <150>;
        };

        hrprml: hrprml {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Pinky Ring Middy Left";
            #binding-cells = <2>;
            tapping-term-ms = <270>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 70 71 72 73 74 75 37 38 53 68 69 70 35 36 65 66 67 52>;
        };

        hril: hril {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Index Left";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <37 38 53 68 69 70 7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75 36 52 65 66 67 35>;
        };

        hrprmr: hrprmr {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Pinky Ring Middy Right";
            #binding-cells = <2>;
            tapping-term-ms = <270>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 37 46 47 48 49 50 51 52 53 60 61 62 63 64 65 66 67 38 69 70 68>;
        };

        hrir: hrir {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Index Right";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67 37 38 53 68 69 70>;
        };

        layernav: layernav {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYERNAV";
            #binding-cells = <0>;
            bindings = <&sl 1>, <&tog 1>;
        };

        layerkpfn: layerkpfn {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYERKPFN";
            #binding-cells = <0>;
            bindings = <&sl 2>, <&tog 2>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
&kp EQUAL   &kp N1          &kp N2          &kp N3           &kp N4          &kp N5  &layerkpfn                                                 &mo 3      &kp N6  &kp N7          &kp N8           &kp N9          &kp N0                  &kp MINUS
&kp TAB     &kp Q           &kp W           &kp E            &kp R           &kp T   &layernav                                                  &layernav  &kp Y   &kp U           &kp I            &kp O           &kp P                   &kp BSLH
&kp ESC     &hrprml LGUI A  &hrprml LALT S  &hrprml LCTRL D  &hril LSHIFT F  &kp G   &none       &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &kp INS    &kp H   &hrir RSHIFT J  &hrprmr RCTRL K  &hrprmr RALT L  &hrprmr RGUI SEMICOLON  &kp SQT
&kp LSHFT   &kp Z           &kp X           &kp C            &kp V           &kp B                          &kp HOME      &kp PG_UP                        &kp N   &kp M           &kp COMMA        &kp DOT         &kp FSLH                &kp RSHFT
&layerkpfn  &kp GRAVE       &kp CAPS        &kp LEFT         &kp RIGHT               &kp BSPC    &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP          &kp DOWN         &kp LBKT        &kp RBKT                &layerkpfn
            >;
        };

        Navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans     &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &to 0                                       &to 0   &kp PG_UP  &kp HOME  &kp UP    &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans     &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans             &trans    &trans    &trans     &trans  &trans
            >;
        };

        Function_Keypad {
            bindings = <
&trans  &trans  &kp F10  &kp F11  &kp F12  &trans  &trans                                      &trans  &trans           &trans     &trans     &trans     &trans  &trans
&trans  &trans  &kp F7   &kp F8   &kp F9   &trans  &to 0                                       &to 0   &trans           &kp KP_N7  &kp KP_N8  &kp KP_N9  &trans  &trans
&trans  &trans  &kp F4   &kp F5   &kp F6   &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans           &kp KP_N4  &kp KP_N5  &kp KP_N6  &trans  &trans
&trans  &trans  &kp F1   &kp F2   &kp F3   &trans                  &trans      &trans                  &kp KP_NUMBER_0  &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans  &trans
&trans  &trans  &trans   &trans   &trans           &trans  &trans  &trans      &trans  &trans  &trans                   &trans     &trans     &trans     &trans  &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
